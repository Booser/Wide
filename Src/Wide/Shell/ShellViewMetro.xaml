<Controls:MetroWindow x:Class="Wide.Shell.ShellViewMetro" x:ClassModifier="internal"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                      xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
                      xmlns:local="clr-namespace:Wide.Shell" 
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                      xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      TitleForeground="#FF717171" TitleCaps="False" Title="{Binding Title}" Icon="{Binding Icon}" WindowTransitionsEnabled="False" 
                      Closing="Window_Closing_1">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ThemeDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                        <ResourceDictionary
                            Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                        <ResourceDictionary
                            Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                        <ResourceDictionary
                            Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/Wide;component/Interfaces/Styles/ControlsMetro.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <local:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Controls:MetroWindow.GlowBrush>
        <SolidColorBrush Color="{DynamicResource GlowColor}" />
    </Controls:MetroWindow.GlowBrush>

    <Border>
        <DockPanel>
            <!--Menu-->
            <Menu DockPanel.Dock="Top" IsMainMenu="True" x:Name="mainMenu" VerticalAlignment="Top"
                  ItemsSource="{Binding Path=Menus, UpdateSourceTrigger=PropertyChanged}" />
            <!--Toolbar (can we improve this?)-->
            <ContentControl Content="{Binding ToolBarTray}" DockPanel.Dock="Top" />
            <!--Status bar-->
            <StatusBar DockPanel.Dock="Bottom" Background="{DynamicResource WindowTitleColorBrush}">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*" />
                                <ColumnDefinition Width="Auto" MaxWidth="100" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <TextBlock x:Name="StatusBarText" Foreground="{DynamicResource BlackBrush}">Ready</TextBlock>
                </StatusBarItem>
                <StatusBarItem Grid.Column="2">
                    <TextBlock Foreground="{DynamicResource BlackBrush}">Testing</TextBlock>
                </StatusBarItem>
            </StatusBar>
            
            <!--The magical avalon dock-->
            <avalonDock:DockingManager x:Name="dockManager" AnchorablesSource="{Binding Tools}"
                                       DocumentsSource="{Binding Documents}"
                                       ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}" ActiveContentChanged="dockManager_ActiveContentChanged">
                <!--<avalonDock:DockingManager.Theme>
                    <avalonDock:VS2012Theme />
                </avalonDock:DockingManager.Theme>-->
                <avalonDock:DockingManager.LayoutItemTemplateSelector>
                    <local:PanesTemplateSelector>
                        <local:PanesTemplateSelector.ContentViewTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding View, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </local:PanesTemplateSelector.ContentViewTemplate>
                        <local:PanesTemplateSelector.ToolViewTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding View, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </local:PanesTemplateSelector.ToolViewTemplate>
                    </local:PanesTemplateSelector>
                </avalonDock:DockingManager.LayoutItemTemplateSelector>

                <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                    <local:PanesStyleSelector>
                        <local:PanesStyleSelector.ToolStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                                <Setter Property="Title" Value="{Binding Model.Title, Mode=TwoWay}" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="Visibility"
                                        Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            </Style>
                        </local:PanesStyleSelector.ToolStyle>
                        <local:PanesStyleSelector.ContentStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                <Setter Property="Title" Value="{Binding Model.Title, Mode=TwoWay}" />
                                <Setter Property="ToolTip" Value="{Binding Model.Tooltip}" />
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            </Style>
                        </local:PanesStyleSelector.ContentStyle>
                    </local:PanesStyleSelector>
                </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <avalonDock:DockingManager.LayoutUpdateStrategy>
                    <local:LayoutInitializer />
                </avalonDock:DockingManager.LayoutUpdateStrategy>

                <avalonDock:LayoutRoot>
                    <avalonDock:LayoutPanel Orientation="Vertical">
                        <avalonDock:LayoutDocumentPane />
                        <avalonDock:LayoutAnchorablePane Name="ToolServicePane" DockHeight="150"></avalonDock:LayoutAnchorablePane>
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutRoot>
            </avalonDock:DockingManager>
        </DockPanel>
    </Border>
</Controls:MetroWindow>